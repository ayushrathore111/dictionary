[{"/project/dictionary/src/index.js":"1","/project/dictionary/src/App.js":"2","/project/dictionary/src/componenets/Header/Header.js":"3","/project/dictionary/src/componenets/Footer/Footer.js":"4","/project/dictionary/src/componenets/Definitions/Definitions.js":"5","/project/dictionary/src/data/category.js":"6"},{"size":271,"mtime":1663498732997,"results":"7","hashOfConfig":"8"},{"size":2456,"mtime":1663498949237,"results":"9","hashOfConfig":"8"},{"size":1771,"mtime":1663498732997,"results":"10","hashOfConfig":"8"},{"size":1128,"mtime":1663498732997,"results":"11","hashOfConfig":"8"},{"size":2715,"mtime":1663498732997,"results":"12","hashOfConfig":"8"},{"size":545,"mtime":1663498732997,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2937f2",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/project/dictionary/src/index.js",[],[],"/project/dictionary/src/App.js",["33"],[],"import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { Container, Switch } from \"@mui/material\";\nimport { withStyles } from \"@mui/material/styles\";\nimport { grey } from \"@mui/material/colors\";\nimport Header from \"./componenets/Header/Header\";\nimport Footer from \"./componenets/Footer/Footer\";\nimport Definitions from \"./componenets/Definitions/Definitions\";\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n\n  const [LightTheme, setLightTheme] = useState(false);\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n      );\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  console.log(meanings);\n  useEffect(() => {\n    // eslint-disable-line react-hooks/exhaustive-deps\n    dictionaryApi();\n  }, [word, category]);\n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: grey[50],\n      \"&$checked\": {\n        color: grey[900],\n      },\n      \"&$checked + $track\": {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n  return (\n    <div\n      className=\"App\"\n      style={{\n        height: \"100vh\",\n        backgroundColor: LightTheme ? \"#fff\" : \"#282c34\",\n        color: LightTheme ? \"black\" : \"white\",\n        transition: \"all 0.5s linear\",\n      }}\n    >\n      <Container\n        maxw=\"md\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          heigh: \"100vh\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        {\" \"}\n        <div\n          style={{ position: \"absolute\", top: 0, right: 15, paddingTop: 10 }}\n        >\n          <span>\n            {\" \"}\n            {LightTheme ? \"Dark\" : \"Light\"}\n            Mode{\" \"}\n          </span>{\" \"}\n          <PurpleSwitch\n            checked={LightTheme}\n            onChange={() => setLightTheme(!LightTheme)}\n          />{\" \"}\n        </div>{\" \"}\n        <Header\n          category={category}\n          setCategory={setCategory}\n          word={word}\n          setWord={setWord}\n        />\n        {meanings && (\n          <Definitions word={word} meanings={meanings} category={category} />\n        )}{\" \"}\n      </Container>{\" \"}\n      <Footer />{\" \"}\n    </div>\n  );\n}\n\nexport default App;\n","/project/dictionary/src/componenets/Header/Header.js",[],[],"/project/dictionary/src/componenets/Footer/Footer.js",[],[],"/project/dictionary/src/componenets/Definitions/Definitions.js",[],[],"/project/dictionary/src/data/category.js",[],[],{"ruleId":"34","severity":1,"message":"35","line":31,"column":6,"nodeType":"36","endLine":31,"endColumn":22,"suggestions":"37"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dictionaryApi'. Either include it or remove the dependency array.","ArrayExpression",["38"],{"desc":"39","fix":"40"},"Update the dependencies array to be: [word, category, dictionaryApi]",{"range":"41","text":"42"},[999,1015],"[word, category, dictionaryApi]"]